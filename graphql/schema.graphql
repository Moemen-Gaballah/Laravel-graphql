"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @all

    tags: [Tag!]! @all
    tag(slug: String @eq, id: ID @eq): Tag @find

#    opportunities: [Opportunity!]! @all
    opportunities(
        orderBy: _ @orderBy(columns: ["created_at"])
        hasTags: _ @whereHasConditions(columns: ["slug"])
    ): [Opportunity!]! @all
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Tag {
    id: ID!
    title: String!
    slug: String!
}

type Opportunity {
    id: ID!
    job_title: String!
    job_location: String!
    job_link: String!
    company_name: String!
    company_logo: String!
    created_at: DateTime
    updated_at: DateTime
    tags: [Tag!]! @belongsToMany
    user: User! @belongsTo
}
